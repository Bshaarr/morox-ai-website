# استيراد الوحدات اللازمة من Flask
from flask import Flask, request, jsonify
# استيراد CORS للسماح بطلبات من الواجهة الأمامية (Frontend)
from flask_cors import CORS

# تهيئة تطبيق Flask
app = Flask(__name__)
# تفعيل CORS لجميع المسارات للسماح للواجهة الأمامية بالوصول
CORS(app)

# مسار أساسي لاختبار أن الخادم يعمل
@app.route('/')
def home():
    """
    مسار الصفحة الرئيسية لاختبار اتصال الخادم.
    """
    return "مرحباً بك في الواجهة الخلفية لـ Morox!"

# مسار لمعالجة إرسال نموذج الاتصال
@app.route('/contact', methods=['POST'])
def contact():
    """
    يعالج طلبات POST من نموذج الاتصال.
    يستقبل البيانات (الاسم، البريد الإلكتروني، الرسالة) ويقوم بمعالجتها.
    """
    # التحقق مما إذا كان الطلب بصيغة JSON
    if not request.is_json:
        # إذا لم يكن الطلب بصيغة JSON، يتم إرجاع خطأ
        return jsonify({"message": "Content-Type must be application/json"}), 400

    # الحصول على بيانات JSON المرسلة من الواجهة الأمامية
    data = request.get_json()

    # استخراج البيانات من الحمولة (payload)
    name = data.get('name')
    email = data.get('email')
    message = data.get('message')

    # التحقق من أن جميع الحقول المطلوبة موجودة
    if not name or not email or not message:
        # إذا كانت هناك حقول مفقودة، يتم إرجاع خطأ
        return jsonify({"message": "الرجاء تعبئة جميع الحقول المطلوبة."}), 400

    # في هذا المثال، سنقوم فقط بطباعة البيانات إلى وحدة التحكم.
    # في تطبيق حقيقي، يمكنك هنا حفظ البيانات في قاعدة بيانات (مثل Firestore أو MongoDB)،
    # أو إرسال بريد إلكتروني، أو تنفيذ أي منطق عمل آخر.
    print(f"تم استلام رسالة جديدة من نموذج الاتصال:")
    print(f"الاسم: {name}")
    print(f"البريد الإلكتروني: {email}")
    print(f"الرسالة: {message}")

    # إرجاع استجابة نجاح إلى الواجهة الأمامية
    return jsonify({"message": "تم استلام رسالتك بنجاح!"}), 200

# نقطة نهاية API مثال لجلب بيانات الدورات (للاستخدام المستقبلي)
@app.route('/api/courses', methods=['GET'])
def get_courses():
    """
    يعيد قائمة بالدورات المتاحة.
    يمكن استخدام هذا لجلب بيانات الدورات ديناميكيًا للواجهة الأمامية.
    """
    courses_data = [
        {"id": 1, "title": "مقدمة في الذكاء الاصطناعي", "description": "تعلم أساسيات الذكاء الاصطناعي، تاريخه، تطبيقاته، ومستقبله المثير."},
        {"id": 2, "title": "التعلم الآلي للمبتدئين", "description": "اكتشف عالم التعلم الآلي، من الخوارزميات الأساسية إلى النماذج المتقدمة."},
        {"id": 3, "title": "التعلم العميق والشبكات العصبية", "description": "تعمق في التعلم العميق، العمود الفقري للذكاء الاصطناعي الحديث."},
        {"id": 4, "title": "معالجة اللغة الطبيعية (NLP)", "description": "استكشف كيف تفهم الآلات اللغة البشرية وتتفاعل معها."},
        {"id": 5, "title": "الرؤية الحاسوبية", "description": "تعلم كيف ترى الآلات العالم وتفسر الصور ومقاطع الفيديو."},
        {"id": 6, "title": "الأخلاقيات في الذكاء الاصطناعي", "description": "ناقش التحديات الأخلاقية المرتبطة بتطوير واستخدام الذكاء الاصطناعي."}
    ]
    return jsonify(courses_data), 200

# تشغيل الخادم
if __name__ == '__main__':
    # تشغيل التطبيق في وضع التصحيح (Debug mode)
    # ملاحظة: قم بتعطيل وضع التصحيح في بيئات الإنتاج
    app.run(debug=True)
